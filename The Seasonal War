#include<iostream>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<cmath>
#include<algorithm>
#include<iomanip>
#include<deque>
using namespace std;
int dx[8]={-1,-1,-1,0,0,1,1,1};
int dy[8]={-1,0,1,-1,1,-1,0,1};
void Braka(){
 ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
}
char **v;
bool **b;
int n;
/*bool valid(int x,int y){
  return (x<n&&y<n);
}
void DFS(int x,int y){
   b[x][y]=true;
   for(int i=0;i<8;i++)
	   if(valid(x+dx[i],y+dy[i])&&!b[x+dx[i]][y+dy[i]]&&v[x+dx[i]][y+dy[i]]=='1')
		   DFS(x+dx[i],y+dy[i]);
}*/
void DFS(int x,int y){
	if(b[x][y])return;
	b[x][y]=true;
	for(int i=0;i<8;i++)
		if(x+dx[i]<n&&y+dy[i]<n&&x+dx[i]>=0&&y+dy[i]>=0&&v[x+dx[i]][y+dy[i]]=='1')
			DFS(x+dx[i],y+dy[i]);
	/*if(x+1<n&&v[x+1][y]=='1')DFS(x+1,y);
	if(y+1<n&&v[x][y+1]=='1')DFS(x,y+1);
	if(x+1<n&&y+1<n&&v[x+1][y+1]=='1')DFS(x+1,y+1);
	if(x-1>=0&&v[x-1][y]=='1')DFS(x-1,y);
	if(x-1>=0&&y+1<n&&v[x-1][y+1]=='1')DFS(x-1,y+1);
	if(x-1>=0&&y-1>=0&&v[x-1][y-1]=='1')DFS(x-1,y-1);
	if(y-1>=0&&v[x][y-1]=='1')DFS(x,y-1);
	if(x+1<n&&y-1>=0&&v[x+1][y-1]=='1')DFS(x+1,y-1);*/
}
int main()
{
	Braka();
	int i=0;
	 while(cin>>n){
		 i++;
	v=new char *[n];
	b=new bool *[n];
	for(int i=0;i<n;i++){
		v[i]=new char[n];
		b[i]=new bool[n];
	}
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++){
	      cin>>v[i][j];
		  b[i][j]=false;
		}
	int ans=0;
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			if(v[i][j]=='1'&&!b[i][j]){
				//cout<<i<<" "<<j<<endl;
				ans++;
			   DFS(i,j);
			}
			cout<<"Image number "<<i<<" contains "<<ans<<" war eagles."<<endl;
	 }
	return 0;
}
